{"version":3,"sources":["webpack:///./src/components/better/route-target-heading.js","webpack:///./src/pages/layout.jsx","webpack:///./src/components/site-chrome/header.js","webpack:///./src/components/site-chrome/navigation.js","webpack:///./src/components/site-chrome/layout.js","webpack:///./node_modules/focus-visible/dist/focus-visible.js"],"names":["children","LayoutPage","title","keywords","href","className","data-el","Header","siteTitle","to","navStyles","nav","id","tabIndex","navHeading","data","applyFocusVisiblePolyfill","scope","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","isValidFocusTarget","el","document","nodeName","classList","addFocusVisibleClass","contains","add","setAttribute","onPointerDown","e","addInitialPointerMoveListeners","addEventListener","onInitialPointerMove","target","toLowerCase","removeEventListener","metaKey","altKey","ctrlKey","activeElement","visibilityState","type","tagName","readOnly","isContentEditable","hasAttribute","window","clearTimeout","setTimeout","remove","removeAttribute","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","DOCUMENT_NODE","documentElement","event","CustomEvent","error","createEvent","initCustomEvent","dispatchEvent","factory"],"mappings":"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","file":"component---src-pages-layout-jsx-fc547f57dd915073be3d.js","sourcesContent":["import React from \"react\"\nimport { css } from \"@emotion/core\"\n\nconst styles = css`\n    .routeSkipHeading {\n        position: relative;\n    }\n    .routeSkipLink {\n        display: inline-block;\n        margin-left: -0.75em;\n        opacity: 0;\n        position: absolute;\n        text-decoration: none;\n    }\n    .routeSkipLink:before {\n        content: 'â‡½';\n        display: block;\n    }\n    .routeSkipLink:focus,\n    .routeSkipLink:hover {\n        opacity: 1;\n    }\n`\nconst RouteHeading = ({children}) => {\n    return (\n        <>\n        </>\n    )\n}\nexport default RouteHeading\n","import React from \"react\"\n\nimport Layout from '../components/site-chrome/layout'\nimport SEO from '../components/site-chrome/seo'\n\nimport RouteTargetHeading from \"../components/better/route-target-heading.js\"\n\nconst LayoutPage = () => (\n  <Layout>\n    <SEO title=\"Semantics\" keywords={['javascript', 'accessibility', 'react']} />\n    <div>\n        <h2>\n            Semantics and CSS layout\n        </h2>\n        <p>CSS layouts are modern now. You can use CSS Grid and HTML5! Inspect these semantic layouts in DevTools and screen readers. Play with the rotor/elements list, heading navigation, </p>\n        <p><strong>[<a href=\"https://github.com/marcysutton/gatsby-a11y-workshop/blob/master/src/pages/layout.jsx\">page source</a>]</strong></p>\n        <div className=\"semantic-layout\">\n            <div data-el=\"div\" className=\"grid-wrap-2\">\n                <div data-el=\"div\">\n                    <div className=\"heading level-3\">DIVs all the way down</div>\n                    <div data-el=\"div\" className=\"fake-list\">\n                        <div>\n                            <div><a href=\"#\">Turkey</a></div>\n                            <div><a href=\"#\">Gooberface</a></div>\n                        </div>\n                    </div>\n                </div>\n                <div data-el=\"div\">\n                    <p>Doggo ipsum stop it fren borking doggo shoober floofs, very jealous pupper thicc. Pats smol borking doggo with a long snoot for pats blop pupper, borking doggo wrinkler. Lotsa pats big ol pupper h*ck heckin angery woofer pupper, blop heckin mlem.</p>\n                </div>\n            </div>\n        </div>\n\n        <section className=\"semantic-layout\" data-el=\"section [role=region]\">\n            <div data-el=\"div\" className=\"grid-wrap-2\">\n                <header data-el=\"header role=[header]\">\n                    <h3>HTML5 and CSS Grid Layout</h3>\n                    <nav data-el=\"nav role[nav]\">\n                        <ul>\n                            <li><a href=\"#\">Cheddarino</a></li>\n                            <li><a href=\"#\">Sweet Pupper</a></li>\n                        </ul>\n                    </nav>\n                </header>\n                <article data-el=\"article role=[group]\">\n                    <h3>Maximum borkdrive</h3>\n                    <p>Very hand that feed shibe puggorino very taste wow.  Maximum borkdrive much ruin diet very hand that feed shibe very taste wow long water shoob doge doggo heckin, shoober ruff shoob wrinkler bork much ruin diet. he made many woofs woofer. Wow such tempt mlem very hand that feed shibe porgo, wrinkler shoob. Vvv puggo doggorino very good spot such treat length boy puggo, woofer heckin angery woofer wow very biscit pupperino very taste wow.</p>\n                </article>\n            </div>\n        </section>\n    </div>\n  </Layout>\n)\n\nexport default LayoutPage\n\n\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"globalHeader\">\n    <ul className=\"skip-link\">\n      <li><a href=\"#main\">Skip to main</a></li>\n    </ul>\n    <h1>\n      <Link\n        to=\"/\"\n      >\n        {siteTitle}\n      </Link>\n    </h1>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport navStyles from \"./navigation.module.scss\"\n\nconst Navigation = () => (\n    <nav className={`nav ${navStyles.nav}`}>\n        <h2 className=\"visually-hidden\">\n            Navigation\n        </h2>\n        <ul id=\"navigation\" tabIndex=\"-1\">\n            <li><Link to=\"/\">App Home</Link></li>\n            <li><Link to=\"/slides\">Slide deck</Link></li>\n            <li className={`navItemGroup ${navStyles.navItemGroup} `}>\n                <h3 className={`navHeading ${navStyles.navHeading}`}>\n                    Demos\n                </h3>\n                <ul id=\"page-navigation\">\n                    <li><Link to=\"/dropdown\">Dropdown</Link></li>\n                    <li><Link to=\"/announcer\">Announcer</Link></li>\n                    <li><Link to=\"/layout\">Layout</Link></li>\n                    <li><Link to=\"/animation\">Animation</Link></li>\n                    <li><Link to=\"/enhanced-tablist\">Enhanced Tablist</Link></li>\n                </ul>\n            </li>\n            <li className={`navItemGroup ${navStyles.navItemGroup} `}>\n                <h3 className={`navHeading ${navStyles.navHeading}`}>\n                    Concepts\n                </h3>\n                <ul>\n                    <li>Focus management</li>\n                    <li>Announcements</li>\n                    <li>Semantic HTML</li>\n                    <li>Unobtrusive motion</li>\n                    <li>Progressive enhancement</li>\n                </ul>\n            </li>\n        </ul>\n    </nav>\n)\n\nexport default Navigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Navigation from './navigation'\nimport './layout.scss'\nimport 'focus-visible'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  return (\n    <div className=\"js-workshop-app\">\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Navigation />\n      <main className=\"app\" id=\"main\">\n        {children}\n      </main>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() : typeof define === 'function' && define.amd ? define(factory) : factory();\n})(this, function () {\n  'use strict';\n  /**\n   * Applies the :focus-visible polyfill at the given scope.\n   * A scope in this case is either the top-level Document or a Shadow Root.\n   *\n   * @param {(Document|ShadowRoot)} scope\n   * @see https://github.com/WICG/focus-visible\n   */\n\n  function applyFocusVisiblePolyfill(scope) {\n    var hadKeyboardEvent = true;\n    var hadFocusVisibleRecently = false;\n    var hadFocusVisibleRecentlyTimeout = null;\n    var inputTypesWhitelist = {\n      text: true,\n      search: true,\n      url: true,\n      tel: true,\n      email: true,\n      password: true,\n      number: true,\n      date: true,\n      month: true,\n      week: true,\n      time: true,\n      datetime: true,\n      'datetime-local': true\n    };\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n\n    function isValidFocusTarget(el) {\n      if (el && el !== document && el.nodeName !== 'HTML' && el.nodeName !== 'BODY' && 'classList' in el && 'contains' in el.classList) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Computes whether the given element should automatically trigger the\n     * `focus-visible` class being added, i.e. whether it should always match\n     * `:focus-visible` when focused.\n     * @param {Element} el\n     * @return {boolean}\n     */\n\n\n    function focusTriggersKeyboardModality(el) {\n      var type = el.type;\n      var tagName = el.tagName;\n\n      if (tagName == 'INPUT' && inputTypesWhitelist[type] && !el.readOnly) {\n        return true;\n      }\n\n      if (tagName == 'TEXTAREA' && !el.readOnly) {\n        return true;\n      }\n\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n\n\n    function addFocusVisibleClass(el) {\n      if (el.classList.contains('focus-visible')) {\n        return;\n      }\n\n      el.classList.add('focus-visible');\n      el.setAttribute('data-focus-visible-added', '');\n    }\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n\n\n    function removeFocusVisibleClass(el) {\n      if (!el.hasAttribute('data-focus-visible-added')) {\n        return;\n      }\n\n      el.classList.remove('focus-visible');\n      el.removeAttribute('data-focus-visible-added');\n    }\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n\n\n    function onKeyDown(e) {\n      if (e.metaKey || e.altKey || e.ctrlKey) {\n        return;\n      }\n\n      if (isValidFocusTarget(scope.activeElement)) {\n        addFocusVisibleClass(scope.activeElement);\n      }\n\n      hadKeyboardEvent = true;\n    }\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n\n\n    function onPointerDown(e) {\n      hadKeyboardEvent = false;\n    }\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {Event} e\n     */\n\n\n    function onFocus(e) {\n      // Prevent IE from focusing the document or HTML element.\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n        addFocusVisibleClass(e.target);\n      }\n    }\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n\n\n    function onBlur(e) {\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (e.target.classList.contains('focus-visible') || e.target.hasAttribute('data-focus-visible-added')) {\n        // To detect a tab/window switch, we look for a blur event followed\n        // rapidly by a visibility change.\n        // If we don't see a visibility change within 100ms, it's probably a\n        // regular focus change.\n        hadFocusVisibleRecently = true;\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n          hadFocusVisibleRecently = false;\n          window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        }, 100);\n        removeFocusVisibleClass(e.target);\n      }\n    }\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n\n\n    function onVisibilityChange(e) {\n      if (document.visibilityState == 'hidden') {\n        // If the tab becomes active again, the browser will handle calling focus\n        // on the element (Safari actually calls it twice).\n        // If this tab change caused a blur on an element with focus-visible,\n        // re-apply the class when the user switches back to the tab.\n        if (hadFocusVisibleRecently) {\n          hadKeyboardEvent = true;\n        }\n\n        addInitialPointerMoveListeners();\n      }\n    }\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n\n\n    function addInitialPointerMoveListeners() {\n      document.addEventListener('mousemove', onInitialPointerMove);\n      document.addEventListener('mousedown', onInitialPointerMove);\n      document.addEventListener('mouseup', onInitialPointerMove);\n      document.addEventListener('pointermove', onInitialPointerMove);\n      document.addEventListener('pointerdown', onInitialPointerMove);\n      document.addEventListener('pointerup', onInitialPointerMove);\n      document.addEventListener('touchmove', onInitialPointerMove);\n      document.addEventListener('touchstart', onInitialPointerMove);\n      document.addEventListener('touchend', onInitialPointerMove);\n    }\n\n    function removeInitialPointerMoveListeners() {\n      document.removeEventListener('mousemove', onInitialPointerMove);\n      document.removeEventListener('mousedown', onInitialPointerMove);\n      document.removeEventListener('mouseup', onInitialPointerMove);\n      document.removeEventListener('pointermove', onInitialPointerMove);\n      document.removeEventListener('pointerdown', onInitialPointerMove);\n      document.removeEventListener('pointerup', onInitialPointerMove);\n      document.removeEventListener('touchmove', onInitialPointerMove);\n      document.removeEventListener('touchstart', onInitialPointerMove);\n      document.removeEventListener('touchend', onInitialPointerMove);\n    }\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n\n\n    function onInitialPointerMove(e) {\n      // Work around a Safari quirk that fires a mousemove on <html> whenever the\n      // window blurs, even if you're tabbing out of the page. Â¯\\_(ãƒ„)_/Â¯\n      if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n        return;\n      }\n\n      hadKeyboardEvent = false;\n      removeInitialPointerMoveListeners();\n    } // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n\n\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n    addInitialPointerMoveListeners(); // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true); // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n      // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n      // have a root element to add a class to. So, we add this attribute to the\n      // host element instead:\n      scope.host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n      document.documentElement.classList.add('js-focus-visible');\n    }\n  } // It is important to wrap all references to global window and document in\n  // these checks to support server-side rendering use cases\n  // @see https://github.com/WICG/focus-visible/issues/199\n\n\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    // Make the polyfill helper globally available. This can be used as a signal\n    // to interested libraries that wish to coordinate with the polyfill for e.g.,\n    // applying the polyfill to a shadow root:\n    window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill; // Notify interested libraries of the polyfill's presence, in case the\n    // polyfill was loaded lazily:\n\n    var event;\n\n    try {\n      event = new CustomEvent('focus-visible-polyfill-ready');\n    } catch (error) {\n      // IE11 does not support using CustomEvent as a constructor directly:\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n    }\n\n    window.dispatchEvent(event);\n  }\n\n  if (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n  }\n});"],"sourceRoot":""}